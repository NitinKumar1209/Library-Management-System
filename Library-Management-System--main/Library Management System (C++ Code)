// I'll be making Library-Management-System ☺☺
#include <iostream>
#include <vector>
#include <string>

using namespace std;

class Book {
public:
    string title;
    string author;
    int id;
    bool available;

    Book(string t, string a, int i) : title(t), author(a), id(i), available(true) {}
};

class Library {
private:
    vector<Book> books;

public:
    void addBook(string title, string author, int id) {
        books.push_back(Book(title, author, id));
    }

    void displayBooks() {
        cout << "Library Inventory:\n";
        for (const auto& book : books) {
            cout << "Title: " << book.title << ", Author: " << book.author << ", ID: " << book.id;
            if (book.available)
                cout << " (Available)\n";
            else
                cout << " (Not Available)\n";
        }
    }

    void borrowBook(int id) {
        for (auto& book : books) {
            if (book.id == id && book.available) {
                book.available = false;
                cout << "Book '" << book.title << "' borrowed successfully.\n";
                return;
            }
        }
        cout << "Book with ID " << id << " not found or not available.\n";
    }

    void returnBook(int id) {
        for (auto& book : books) {
            if (book.id == id && !book.available) {
                book.available = true;
                cout << "Book '" << book.title << "' returned successfully.\n";
                return;
            }
        }
        cout << "Book with ID " << id << " not found or already available.\n";
    }
};

int main() {
    Library library;

    // Adding some books to the library
    library.addBook("The Great Gatsby", "F. Scott Fitzgerald", 101);
    library.addBook("To Kill a Mockingbird", "Harper Lee", 102);
    library.addBook("1984", "George Orwell", 103);

    // Displaying the library inventory
    library.displayBooks();

    // Example of borrowing and returning a book
    library.borrowBook(101);
    library.returnBook(101);

    return 0;
}
